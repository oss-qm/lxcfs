#!/bin/sh

set -e

# This script can be called in the following ways:
#
# After the package was installed:
#       <postinst> configure <old-version>
#
#
# If prerm fails during upgrade or fails on failed upgrade:
#       <old-postinst> abort-upgrade <new-version>
#
# If prerm fails during deconfiguration of a package:
#       <postinst> abort-deconfigure in-favour <new-package> <version>
#                  removing <old-package> <version>
#
# If prerm fails during replacement due to conflict:
#       <postinst> abort-remove in-favour <new-package> <version>

case "$1" in
    configure)
        # We cannot restart lxcfs itself because containers will become
        # unable to read /proc/uptime etc.
        if [ -n "$2" ] && dpkg --compare-versions "$2" le 0.17-0ubuntu3; then
            # previous lxcfs is too old, we have to simply ask the user to
            # reboot.
            [ -x /usr/share/update-notifier/notify-reboot-required ] && \
                    /usr/share/update-notifier/notify-reboot-required
        elif [ -f /run/lxcfs.pid ]; then
            # lxcfs is new enough - send it a USR1 signal to reload the
            # new liblxcfs.
            kill -USR1 `cat /run/lxcfs.pid` || true
        fi
        # If neither of the above was true, lxcfs was new enough but was
        # not running, so just wait for systemd to start it.
    ;;

esac

#DEBHELPER#

exit 0
